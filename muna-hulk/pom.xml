<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>muna-hulk</artifactId>
	<packaging>jar</packaging>

	<name>muna-hulk</name>
	<description>Muna Inc. server application</description>

    <parent>
        <groupId>gift.muna</groupId>
        <artifactId>muna-core</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

	<dependencies>
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-security</artifactId>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-validation</artifactId>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>org.springframework.security</groupId>-->
			<!--<artifactId>spring-security-test</artifactId>-->
			<!--<scope>test</scope>-->
		<!--</dependency>-->

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>3.11.4</version>
        </dependency>


        <dependency>
			<groupId>gift.muna</groupId>
			<artifactId>muna-web</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>src/main/resources/application.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>

				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
                        <id>generate-psql</id>
                        <phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>

				<!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
				<configuration>

					<!-- JDBC connection parameters -->
					<jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>${spring.datasource.hikari.jdbc-url}</url>
                        <username>${spring.datasource.hikari.username}</username>
                        <password>${spring.datasource.hikari.password}</password>
					</jdbc>

					<!-- Generator parameters -->
					<generator>
						<database>
                            <name>org.jooq.util.postgres.PostgresDatabase</name>
							<includes>.*</includes>
							<!-- In case your database supports catalogs, e.g. SQL Server:
                            <inputCatalog>public</inputCatalog>
                              -->
							<inputSchema>public</inputSchema>
						</database>
						<target>
							<packageName>org.jooq.codegen.muna</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
